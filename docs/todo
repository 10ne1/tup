can we update a server file (like httpd.c) and restart apache? (eg: like incrontab program)

multi-arch - when building a name-list, automatically include files in a separate build/$(ARCH) directory or some such?

import/export vars to file

cross compiling

out of tree build

change progress bar: Only print bar on lowest line, then backspace and print command on its own line?

if we do out of tree build, can we have the monitor kill the updater if a file modification is detected? or restart it?

have an "include_rules" directive that will include a Rules.tup file in all parent directories? Could be useful for making directory-scoped variables. Also allow doing something like set LINUX_ROOT=. and have it get set to the current directory?

tup build tup

recursive grep kills monitor

will cp -Rp olddir newdir break everything if olddir already has a bunch of stuff compiled in it? - try --seriously-overwrite-outputfiles flag again? I forget why I didn't finish that.

remove dependency on sqlite3 command line

compile on 64-bit

remove tmpdb in favor of just a temporary table?

use temporary table instead of moving all commands to delete in parser? Should be easy to time the difference.

instead of doing delete_name_file() for each entry in delete_list, maybe change the sql to do 'delete from link where from_id in (select id from delete_list)' or some such. Would still need to iterate to actually unlink() files, though.

html:
  proof: big-o notation
  proof: no clean target
  when Tupfiles are parsed
  hidden files are ignored
  how files are deleted
  how dependencies are described/discovered
  tup bugs: build in state Q, change A->B, build in state R, change B->A, build must go back to state Q (not some other state S)
  man pages: tup command line, tup_api
  error messages (eg: you get this error message if...)
