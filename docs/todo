can we update a server file (like httpd.c) and restart apache? (eg: like incrontab program)

support for test automation? (eg: when a program is rebuilt, its test are executed, or something)

multi-arch - when building a name-list, automatically include files in a separate build/$(ARCH) directory or some such?

import/export vars to file

error cases:
what if:
 /lib/libfoo.a
 gcc bar.c -lfoo -L/usr/lib -L/lib
 now create /usr/lib/libfoo.a
 should the link command execute again? after all, if it *did* execute again, it would pull a different lib.

cross compiling

out of tree build

change progress bar: Only print bar on lowest line, then backspace and print command on its own line?

if we do out of tree build, can we have the monitor kill the updater if a file modification is detected? or restart it?

tup delete bar/foo.o shouldn't create directory bar (since it may not exist)

have an "include_rules" directive that will include a Rules.tup file in all parent directories? Could be useful for making directory-scoped variables.

tup build tup

fix graph for weird node names (ex: double-quote)

change ldpreload.so where it does strstr(".tup")? This prevents you from ever doing something like including a Rules.tup file in a tarball, for example. I believe that's just there to ignore my .tup files. Maybe it should check the prefix, not strstr.

html:
  proof: big-o notation
  proof: no clean target
  when Tupfiles are parsed
  how files are deleted
  how dependencies are described/discovered
  tup bugs: build in state Q, change A->B, build in state R, change B->A, build must go back to state Q (not some other state S)
  man pages: tup command line, tup_api
