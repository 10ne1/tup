when restarting monitor - compare file timestamps to the last time the monitor
 shutdown? that way no file changes are missed

can we update a server file (like httpd.c) and restart apache? (eg: like incrontab program)

any way to wrap make so that all sub-procs are wrapped?

 slab: use a free hunk (unlinked memory array), and a free list (object freed is put in the free list)
	alloc can get one from free list if available, if not then free hunk, and if not there then allocate another slab

 modify 'tup graph' to be able to take in start node ids, to trim output

options/features:
 - progress bar
 - color output
 - keep going
 - parallel

portability:
 mac osx may have trouble with unlink() inside a flist_foreach()?

support for test automation? (eg: when a program is rebuilt, its test are executed, or something)

tup:
 generate multiple files
 eg:
  foo -> a, b
  now:
  foo -> a, c
  must modify, a, delete b, create/modify c?
 if monitor is not used (eg: modify touch to do a 'tup touch foo.c' as well) -
  when rebuilding foo.c, should stat foo.h and compare against .tup/objects/foo.h/.name to see if timestamp is different? maybe have a timestamp option (part of the tup configuration) to perform this check, and if out of date add foo.h to modify list as well. That way if foo.h is modified but 'tup touch foo.h' wasn't executed, the build won't be inconsistent.

remove echos from Makefile, use config file - rerun timing tests

using vi to edit a file with the monitor running causes the Makefile update to run (create/delete temp files shouldn't cause dir to go in create/ ?)

using ar with the monitor running - the temp file created ends up putting the directory in create/, and the temp file in modify/ - at worst, the temp file should be in delete/, and the dir should not be in delete/
 - also, the temp file stays in .tup/object, when it should be removed (because wrapper handles rename()? )

what if I change a create_dep line by changing a -i or -o flag, but keeping the command string the same?

- add ability to group high-level programs into your own category?
  - eg: create a cs773 category, and all software I use for that class is
  - linked there. Then I can delete cs773 after the semester to uninstall it all
