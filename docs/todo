add in test case projects, analysis of make/ant
real-world times?

speedups:
	- in mkdirhier, check backwards instead of forwards? as it is, if we make 1/2/3/4.txt and 1/2/3/5.txt, we always check 1/, 1/2/, 1/2/3/, then write the file - maybe more efficient to check if 1/2/3/ already exists, since it would in the second (and all future) files?

	$ cat .tup/51bc59150b346cbb1e9f9b5c636ccb117976e09f/tup.list
	f9dcb764fea0f992af34b7ddb34a01363d6319b0
	
	- read in use tup.list (above) before writing out dependencies to remove old deps? eg: foreach wlist {
		read wlist.tup.list
			foreach wlist.tup.list {
				if in rlist {
					create link
				} else {
					remove link
				}
			}
	}

 - use extra character in filename as newline?

 in addition to name - also have 'cmd' and 'deps'?
 hash command lines?

only add created monitor files to the create list if 'name' doesn't already exist?

any way to wrap make so that all sub-procs are wrapped?

get rid of mkdirhier by creating directories (eg: .tup/attrib) up front and
just giving an error if it doesn't exist? also create up front for deps?


 - split monitor into at least event.c, main.c

 make .tup/attrib and .tup/modify into their own objects? main clean up updater/main.c
 rename 'name' and 'cmd' to '.name', and '.cmd' so it's easier to just remove out anything with a leading .?

 slab: use a free hunk (unlinked memory array), and a free list (object freed is put in the free list)
	alloc can get one from free list if available, if not then free hunk, and if not there then allocate another slab
