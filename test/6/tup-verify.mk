# Compare the dependencies in .tup to the dependencies generated by gcc in
# the .d files. The .tup dir is copied to tuptest, and all deps we find in
# the .d files are removed from tuptest. The remaining files in tuptest are
# echoed. If any dep in a .d file is not found in .tup, that's an error. Any
# remaining files in tuptest may be errors, or may be dependencies not included
# in the .d files (eg: the program: *.o dependencies may correctly appear here).

$(shell rm -rf tuptest)
$(shell cp -R .tup tuptest)

objs := $(wildcard *.o)
deps := $(objs:.o=.d)

all: $(objs)
	@echo "Still in tuptest:";\
	find tuptest -type f

include $(deps)

$(objs):
	@echo $@;\
	for i in $^; do if [ ! -f .tup/$$i.tupd/$@ ]; then echo "Couldn't find $$i.tupd/$@"; exit 1; fi; rm -f ./tuptest/$$i.tupd/$@; done

.PHONY: $(objs)
